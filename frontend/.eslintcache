[{"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\Navbar\\NavabarStyle.jsx":"1","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\Navbar\\navbar.js":"2","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\CreatePassword.jsx":"3","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\marginer\\index.jsx":"4","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\loginForm.jsx":"5","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\HeaderContent.jsx":"6","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\accountBox.jsx":"7","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\ResetPassword\\Email_forpasswordReset.jsx":"8","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\ResetPassword\\ResetPassword.jsx":"9","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\ResetPassword\\resetPassword.jsx":"10","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\common.jsx":"11","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\signupForm.jsx":"12","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\otpform.jsx":"13"},{"size":1216,"mtime":1641891993048,"results":"14","hashOfConfig":"15"},{"size":5978,"mtime":1641891993048,"results":"16","hashOfConfig":"15"},{"size":3562,"mtime":1641907518981,"results":"17","hashOfConfig":"15"},{"size":653,"mtime":1641891993057,"results":"18","hashOfConfig":"15"},{"size":3713,"mtime":1641899853969,"results":"19","hashOfConfig":"15"},{"size":3107,"mtime":1641907884986,"results":"20","hashOfConfig":"15"},{"size":2270,"mtime":1641908255954,"results":"21","hashOfConfig":"15"},{"size":2886,"mtime":1641904884776,"results":"22","hashOfConfig":"15"},{"size":1145,"mtime":1641900075737,"results":"23","hashOfConfig":"15"},{"size":1145,"mtime":1641900092355,"results":"24","hashOfConfig":"15"},{"size":2160,"mtime":1641900954615,"results":"25","hashOfConfig":"15"},{"size":2850,"mtime":1641905099632,"results":"26","hashOfConfig":"15"},{"size":2197,"mtime":1641907748509,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vk4rpb",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\Navbar\\NavabarStyle.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\Navbar\\navbar.js",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\CreatePassword.jsx",["55"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  //   BoldLink,\r\n  BoxContainer,\r\n  FormContainer,\r\n  Input,\r\n  // MutedText,\r\n  SubmitButton,\r\n  Passwordlabel,\r\n  Validationlabel,\r\n} from \"./common\";\r\nimport { Marginer } from \"../marginer\";\r\nimport { AccountContext } from \"./accountContext\";\r\nimport { PasswordValidator } from \"./validator\";\r\n\r\nexport function CreatePassword(props) {\r\n\r\n  // backend ----------------------------------------------------------------------------------------\r\nconst Credentials = async (details)=>{\r\n        const {email , password} = details;\r\n        try{\r\n        const response = await axios.post(\"http://localhost:5000/signUp\", {email, password});\r\n        }\r\n        catch(err)\r\n        {\r\n          console.log(err);\r\n        }\r\n}\r\n  //---------------------------------------------------------------------------------------------------\r\n  const { Switch } = useContext(AccountContext);\r\n  const initialValue = { newpassword: \"\", confirmpassword: \"\" };\r\n  const [password, setPassword] = useState(initialValue);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  function PasswordHandler(event) {\r\n    const { name, value } = event.target;\r\n    setPassword((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  }\r\n\r\n  const RegisterHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(password);\r\n    setFormErrors(PasswordValidator(password));\r\n    setIsSubmit(true);\r\n  };\r\n  useEffect(() => {\r\n    console.log(formErrors);\r\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n      console.log(props.data);\r\n      const details = {\r\n        email:props.data.email,\r\n        password: password.newpassword,\r\n      };\r\n      console.log(details);\r\n      Credentials(details);\r\n      const active=(props.data.flag===\"createpassword\")?\"signupsuccessfully\":\"passwordresetsuccessful\";\r\n     Switch({...details,active:active});\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [formErrors]);\r\n  return (\r\n    <BoxContainer>\r\n      {/* <MutedText style={{textAlign:\"center\",margin:\"0px,0px\"}}>\r\n      </MutedText> */}\r\n      <FormContainer>\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          name=\"newpassword\"\r\n          value={password.newpassword}\r\n          onChange={PasswordHandler}\r\n        />\r\n        <Passwordlabel\r\n          style={{\r\n            color: formErrors.highLighter ? \"#FF0000\" : \"rgba(91, 84, 84, 100)\",\r\n          }}\r\n        >\r\n        Must contain atleast 8 characters\r\n        </Passwordlabel>\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmpassword\"\r\n          value={password.confirmpassword}\r\n          onChange={PasswordHandler}\r\n        />\r\n        {/* <Passwordlabel>Both passwords must match.</Passwordlabel> */}\r\n        {formErrors.Password && (\r\n          <Validationlabel>{formErrors.Password}</Validationlabel>\r\n        )}\r\n        {formErrors.confirmPassword && (\r\n          <Validationlabel>{formErrors.confirmPassword}</Validationlabel>\r\n        )}\r\n      </FormContainer>\r\n      <Marginer direction=\"vertical\" margin={10} />\r\n      <SubmitButton type=\"submit\" onClick={RegisterHandler}>\r\n        {props.data.flag===\"createpassword\"&& \"Register\"}\r\n        {props.data.flag===\"resetpassword\"&& \"Reset\"}\r\n      </SubmitButton>\r\n      <Marginer direction=\"vertical\" margin=\"1em\" />\r\n    </BoxContainer>\r\n  );\r\n}\r\n","D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\marginer\\index.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\loginForm.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\HeaderContent.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\accountBox.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\ResetPassword\\Email_forpasswordReset.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\ResetPassword\\ResetPassword.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\ResetPassword\\resetPassword.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\common.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\signupForm.jsx",[],"D:\\web development\\MNIt Market\\Client\\frontend\\src\\components\\loginForm\\AccountBox\\otpform.jsx",[],{"ruleId":"56","severity":1,"message":"57","line":23,"column":15,"nodeType":"58","messageId":"59","endLine":23,"endColumn":23},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar"]