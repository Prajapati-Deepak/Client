{"ast":null,"code":"var _jsxFileName = \"/home/harshit/FileApprove/client/uploader/src/Uploadd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import Alert from '../components/Alert';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Uploadd() {\n  _s();\n\n  // const [fileInputState, setFileInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n  const [selectedFileText, setSelectedFileText] = useState(''); // const [successMsg, setSuccessMsg] = useState('');\n  // const [errMsg, setErrMsg] = useState('');\n\n  const handleFileInputChange = e => {\n    setSelectedFileText(e.target.value);\n    const file = e.target.files[0];\n    setSelectedFile(file);\n    previewFile(file); // setFileInputState(e.target.value);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!selectedFile) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onloadend = () => {\n      uploadImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.error('AHHHHHHHH!!'); // setErrMsg('something went wrong!');\n    };\n  };\n\n  const uploadImage = base64EncodedImage => {\n    console.log(base64EncodedImage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitFile,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileInputChange,\n        value: selectedFileText,\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"chosen\",\n      style: {\n        height: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Uploadd, \"C0zXB93CEVvrEgREx7j5dDmW5ig=\");\n\n_c = Uploadd;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploadd\");","map":{"version":3,"sources":["/home/harshit/FileApprove/client/uploader/src/Uploadd.js"],"names":["React","useState","Uploadd","previewSource","setPreviewSource","selectedFile","setSelectedFile","selectedFileText","setSelectedFileText","handleFileInputChange","e","target","value","file","files","previewFile","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","onerror","console","error","base64EncodedImage","log","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,EAAhD;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD,CAJ8B,CAK9B;AACA;;AACA,QAAMQ,qBAAqB,GAAIC,CAAD,IAAO;AACjCF,IAAAA,mBAAmB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACA,UAAMC,IAAI,GAAGH,CAAC,CAACC,MAAF,CAASG,KAAT,CAAe,CAAf,CAAb;AACAR,IAAAA,eAAe,CAACO,IAAD,CAAf;AACAE,IAAAA,WAAW,CAACF,IAAD,CAAX,CAJiC,CAKjC;AACH,GAND;;AAQA,QAAME,WAAW,GAAIF,IAAD,IAAU;AAC1B,UAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBL,IAArB;;AACAG,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrBf,MAAAA,gBAAgB,CAACY,MAAM,CAACI,MAAR,CAAhB;AACH,KAFD;AAGH,GAND;;AAQA,QAAMC,gBAAgB,GAAIX,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACY,cAAF;AACA,QAAI,CAACjB,YAAL,EAAmB;AACnB,UAAMW,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBb,YAArB;;AACAW,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrBI,MAAAA,WAAW,CAACP,MAAM,CAACI,MAAR,CAAX;AACH,KAFD;;AAGAJ,IAAAA,MAAM,CAACQ,OAAP,GAAiB,MAAM;AACnBC,MAAAA,OAAO,CAACC,KAAR,CAAc,aAAd,EADmB,CAEnB;AACH,KAHD;AAIH,GAZD;;AAaA,QAAMH,WAAW,GAAII,kBAAD,IAAwB;AACxCF,IAAAA,OAAO,CAACG,GAAR,CAAYD,kBAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAM,MAAA,QAAQ,EAAEN,gBAAhB;AAAkC,MAAA,SAAS,EAAC,MAA5C;AAAA,8BACI;AACI,QAAA,EAAE,EAAC,WADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,QAAQ,EAAEZ,qBAJd;AAKI,QAAA,KAAK,EAAEF,gBALX;AAMI,QAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAiBKJ,aAAa,iBACV;AACI,MAAA,GAAG,EAAEA,aADT;AAEI,MAAA,GAAG,EAAC,QAFR;AAGI,MAAA,KAAK,EAAE;AAAE0B,QAAAA,MAAM,EAAE;AAAV;AAHX;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAnEuB3B,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react';\n// import Alert from '../components/Alert';\n\nexport default function Uploadd() {\n    // const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    const [selectedFileText, setSelectedFileText] = useState('');\n    // const [successMsg, setSuccessMsg] = useState('');\n    // const [errMsg, setErrMsg] = useState('');\n    const handleFileInputChange = (e) => {\n        setSelectedFileText(e.target.value);\n        const file = e.target.files[0];\n        setSelectedFile(file);\n        previewFile(file);\n        // setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            // setErrMsg('something went wrong!');\n        };\n    };\n    const uploadImage = (base64EncodedImage) => {\n        console.log(base64EncodedImage);\n    }\n    \n    return (\n        <div>\n            <h1 className=\"title\">Upload an Image</h1>\n            {/* <Alert msg={errMsg} type=\"danger\" /> */}\n            {/* <Alert msg={successMsg} type=\"success\" /> */}\n            <form onSubmit={handleSubmitFile} className=\"form\">\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleFileInputChange}\n                    value={selectedFileText}\n                    className=\"form-input\"\n                />\n                <button className=\"btn\" type=\"submit\">\n                    Submit\n                </button>\n            </form>\n            {previewSource && (\n                <img\n                    src={previewSource}\n                    alt=\"chosen\"\n                    style={{ height: '300px' }}\n                />\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}