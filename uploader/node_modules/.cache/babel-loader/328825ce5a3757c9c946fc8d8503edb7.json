{"ast":null,"code":"var _jsxFileName = \"/home/harshit/FileApprove/client/uploader/src/Uploadd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import Alert from '../components/Alert';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Uploadd() {\n  _s();\n\n  const [fileInputState, setFileInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [selectedFile, setSelectedFile] = useState(); // const [successMsg, setSuccessMsg] = useState('');\n  // const [errMsg, setErrMsg] = useState('');\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!selectedFile) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onloadend = () => {\n      uploadImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.error('AHHHHHHHH!!');\n      setErrMsg('something went wrong!');\n    };\n  };\n\n  const uploadImage = async base64EncodedImage => {\n    try {\n      await fetch('/api/upload', {\n        method: 'POST',\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setFileInputState('');\n      setPreviewSource('');\n      setSuccessMsg('Image uploaded successfully');\n    } catch (err) {\n      console.error(err);\n      setErrMsg('Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitFile,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileInputChange,\n        value: fileInputState,\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"chosen\",\n      style: {\n        height: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Uploadd, \"XX6TEnSCxI9Aaj/bJmtxFDePD+Q=\");\n\n_c = Uploadd;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploadd\");","map":{"version":3,"sources":["/home/harshit/FileApprove/client/uploader/src/Uploadd.js"],"names":["React","useState","Uploadd","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","handleFileInputChange","e","file","target","files","previewFile","value","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","onerror","console","error","setErrMsg","base64EncodedImage","fetch","method","body","JSON","stringify","data","headers","setSuccessMsg","err","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// import Alert from '../components/Alert';\n\nexport default function Uploadd() {\n    const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    // const [successMsg, setSuccessMsg] = useState('');\n    // const [errMsg, setErrMsg] = useState('');\n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            setErrMsg('something went wrong!');\n        };\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        try {\n            await fetch('/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({ data: base64EncodedImage }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n            setFileInputState('');\n            setPreviewSource('');\n            setSuccessMsg('Image uploaded successfully');\n        } catch (err) {\n            console.error(err);\n            setErrMsg('Something went wrong!');\n        }\n    };\n    return (\n        <div>\n            <h1 className=\"title\">Upload an Image</h1>\n            {/* <Alert msg={errMsg} type=\"danger\" /> */}\n            {/* <Alert msg={successMsg} type=\"success\" /> */}\n            <form onSubmit={handleSubmitFile} className=\"form\">\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleFileInputChange}\n                    value={fileInputState}\n                    className=\"form-input\"\n                />\n                <button className=\"btn\" type=\"submit\">\n                    Submit\n                </button>\n            </form>\n            {previewSource && (\n                <img\n                    src={previewSource}\n                    alt=\"chosen\"\n                    style={{ height: '300px' }}\n                />\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}